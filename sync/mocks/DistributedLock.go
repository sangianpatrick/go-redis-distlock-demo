// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	time "time"

	sync "github.com/sangianpatrick/go-redis-distlock-demo/sync"
	mock "github.com/stretchr/testify/mock"
)

// DistributedLock is an autogenerated mock type for the DistributedLock type
type DistributedLock struct {
	mock.Mock
}

// NewMutex provides a mock function with given fields: key, maxRetries, retryDelay, expiry
func (_m *DistributedLock) NewMutex(key string, maxRetries int, retryDelay time.Duration, expiry time.Duration) sync.Mutex {
	ret := _m.Called(key, maxRetries, retryDelay, expiry)

	var r0 sync.Mutex
	if rf, ok := ret.Get(0).(func(string, int, time.Duration, time.Duration) sync.Mutex); ok {
		r0 = rf(key, maxRetries, retryDelay, expiry)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sync.Mutex)
		}
	}

	return r0
}
